using PurrPurrCoffee.Abstractions;
using UnityEngine;
using Zenject;

namespace PurrPurrCoffee
{
    /// <summary>
    /// Generated by AI (÷àñòè÷íî)
    /// </summary>
    [RequireComponent(typeof(AudioSource))]
    public class MoneyPopupSpawner : MonoBehaviour
    {
        [Inject]
        public void Initialize(GameSession gameSession, ClientController clientController)
        {
            _gameSession = gameSession;
            _clientController = clientController;
        }

        public void ShowMoneyPopup(Vector3 clientPosition, int amount)
        {
            GameObject popupInstance = Instantiate(_moneyPopupPrefab, _ñanvas.transform);
            var popup = popupInstance.GetComponent<MoneyPopup>();
            _audioSource.PlayOneShot(_moneyAudioClip);
            popup.Show(amount);
        }
        public void ShowMoneyPopupDebug(float revenue) => OnCoffeeRevenueChanged(revenue);

        [SerializeField] private GameObject _moneyPopupPrefab;
        [SerializeField] private Canvas _ñanvas;
        [SerializeField] private AudioClip _moneyAudioClip;

        private AudioSource _audioSource;
        private GameSession _gameSession;
        private ClientController _clientController;
        private float _lastRevenue = 0;

        private void Awake()
        {
            _audioSource = GetComponent<AudioSource>();
        }
        private void OnEnable()
        {
            _lastRevenue = _gameSession.CoffeeRrevenue;
            _gameSession.CoffeeRevenueChanged += OnCoffeeRevenueChanged;
        }
        private void OnDisable()
        {
            _gameSession.CoffeeRevenueChanged -= OnCoffeeRevenueChanged;
        }
        private void OnCoffeeRevenueChanged(float revenue)
        {
            var delta = revenue - _lastRevenue;
            _lastRevenue = revenue;
            ShowMoneyPopup(_clientController.ClientPosition, Mathf.FloorToInt(delta));
        }
    }
}
